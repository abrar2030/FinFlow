---
# Docker role for installing and configuring Docker

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Docker packages
  package:
    name:
      - docker-ce={{ docker_version }}*
      - docker-ce-cli={{ docker_version }}*
      - containerd.io
    state: present
    update_cache: yes

- name: Create Docker service directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'

- name: Configure Docker daemon
  copy:
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m",
          "max-file": "3"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
          "overlay2.override_kernel_check=true"
        ],
        "metrics-addr": "0.0.0.0:9323",
        "experimental": true
      }
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: Restart Docker

- name: Ensure Docker service is enabled and started
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes

- name: Add users to Docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users }}"

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'

- name: Create Docker registry authentication
  template:
    src: docker-config.json.j2
    dest: /root/.docker/config.json
    mode: '0600'
  when: registry_username is defined and registry_password is defined

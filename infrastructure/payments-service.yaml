openapi: 3.0.0
info:
  title: Payments Service API
  version: 1.0.0
  description: API for payment processing and tracking
paths:
  /payments/charge:
    post:
      summary: Create a new payment charge
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  minimum: 0.01
                currency:
                  type: string
                  default: USD
                source:
                  type: string
                  description: Payment source token from payment processor
                metadata:
                  type: object
                  description: Additional payment metadata
              required:
                - amount
                - source
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Payment processing error
  
  /payments/{id}:
    get:
      summary: Get payment details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized
        '404':
          description: Payment not found
  
  /payments:
    get:
      summary: Get all payments for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Unauthorized

  /payments/refund:
    post:
      summary: Create a refund for a payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentId:
                  type: string
                  format: uuid
                amount:
                  type: number
                  minimum: 0.01
                reason:
                  type: string
                  enum: [duplicate, fraudulent, requested_by_customer]
              required:
                - paymentId
      responses:
        '200':
          description: Refund created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Payment not found
  
  /payments/webhook:
    post:
      summary: Webhook endpoint for payment processor callbacks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          description: Invalid webhook payload or signature

components:
  schemas:
    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
        amount:
          type: number
        currency:
          type: string
        status:
          type: string
          enum: [PENDING, PROCESSING, COMPLETED, FAILED, REFUNDED]
        processorId:
          type: string
        metadata:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

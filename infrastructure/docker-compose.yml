version: '3.8'

services:
  # Frontend
  frontend:
    build: ./finflow-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PAYMENTS_SERVICE_URL=http://payments-service:3002
      - ACCOUNTING_SERVICE_URL=http://accounting-service:3003
      - ANALYTICS_SERVICE_URL=http://analytics-service:3004
      - CREDIT_SERVICE_URL=http://credit-engine:8000
    depends_on:
      - auth-service
      - payments-service
      - accounting-service
      - analytics-service
      - credit-engine

  # Authentication Service
  auth-service:
    build: ./auth-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@auth-db:5432/auth
      - JWT_SECRET=your_jwt_secret_here
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - auth-db
      - kafka

  # Payments Service
  payments-service:
    build: ./payments-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@payments-db:5432/payments
      - JWT_SECRET=your_jwt_secret_here
      - STRIPE_SECRET=your_stripe_secret_here
      - STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - payments-db
      - kafka

  # Accounting Service
  accounting-service:
    build: ./accounting-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:postgres@accounting-db:5432/accounting
      - JWT_SECRET=your_jwt_secret_here
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - accounting-db
      - kafka

  # Analytics Service
  analytics-service:
    build: ./analytics-service
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:postgres@analytics-db:5432/analytics
      - JWT_SECRET=your_jwt_secret_here
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - analytics-db
      - kafka

  # Credit Engine
  credit-engine:
    build: ./credit-engine
    ports:
      - "8001:8000"
    environment:
      - PORT=8000
      - JWT_SECRET=your_jwt_secret_here
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka

  # Databases
  auth-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth
    volumes:
      - auth-data:/var/lib/postgresql/data

  payments-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=payments
    volumes:
      - payments-data:/var/lib/postgresql/data

  accounting-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=accounting
    volumes:
      - accounting-data:/var/lib/postgresql/data

  analytics-db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=analytics
    volumes:
      - analytics-data:/var/lib/postgresql/data

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana:9.5.1
    ports:
      - "3005:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  auth-data:
  payments-data:
  accounting-data:
  analytics-data:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  prometheus-data:
  grafana-data:
